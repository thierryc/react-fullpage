{"version":3,"sources":["Components/Navigation.js","Home.js","About.js","Documentation.js","ExampleHeaderFooterDrawer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Navigation","styled","nav","Home","location","useLocation","console","log","className","src","logo","alt","Number","Consumer","ctx","onClick","goto","slides","length","About","href","target","rel","Documentation","ExampleHeaderFooterDrawer","App","StrictMode","to","path","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fdfae2da.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Navigation = styled.nav`\n  position: fixed;\n  z-index: 500;\n  top: 0;\n  display: block;\n  width: 100%;\n  background-color: rgba(0,0,0,0.1);\n  color: white;\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    li {\n      float: left;\n      a {\n        display: block;\n        color: white;\n        text-align: center;\n        padding: 14px 16px;\n        text-decoration: none;\n      }\n      a:hover:not(.active) {\n        background-color: rgba(0,0,0,0.9);\n      }\n      a.active {\n        float: right;\n      }\n      .active {\n        background-color: rgba(255,255,255,0.1);\n      }\n    }\n  }\n\n`;\n\nexport default Navigation;","\nimport React from 'react';\nimport {\n  useLocation,\n} from \"react-router-dom\";\nimport Fullpage, { FullPageSections, FullpageSection, FullpageCount, FullpageNavigation, FullpageContext } from '@ap.cx/react-fullpage';\nimport logo from './logo.svg';\n\nfunction Home() {\n  const location = useLocation();\n  console.log(location);\n  \n  return (\n    <Fullpage>\n      <FullpageNavigation/>\n      <FullPageSections>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <FullpageContext.Consumer>\n                {\n                  ctx => (\n                    <button onClick={() => ctx.goto(ctx.slides[ctx.slides.length -1])}>Goto Last</button>\n                  )\n                } \n              </FullpageContext.Consumer>\n            </header>\n          </div>\n        </FullpageSection>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <FullpageContext.Consumer>\n                {\n                  ctx => (\n                    <button onClick={() => ctx.goto(ctx.slides[0])}>Goto First</button>\n                  )\n                }\n              </FullpageContext.Consumer>\n            </header>\n          </div>\n        </FullpageSection>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <FullpageContext.Consumer>\n                {\n                  ctx => (\n                    <button onClick={() => ctx.goto(ctx.slides[0])}>Goto First</button>\n                  )\n                } \n              </FullpageContext.Consumer>\n            </header>\n          </div>\n        </FullpageSection>\n      </FullPageSections>\n    </Fullpage>\n  );\n}\n\nexport default Home;","\nimport React from 'react';\nimport {\n  useLocation,\n} from \"react-router-dom\";\nimport Fullpage, { FullPageSections, FullpageSection, FullpageCount, FullpageNavigation } from '@ap.cx/react-fullpage';\nimport logo from './logo.svg';\n\nfunction About() {\n  let location = useLocation();\n  \n  return (\n    <Fullpage>\n      <FullpageNavigation/>\n      <FullPageSections>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                About\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>\n          </div>\n        </FullpageSection>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>\n          </div>\n        </FullpageSection>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>\n          </div>\n        </FullpageSection>\n      </FullPageSections>\n    </Fullpage>\n  );\n}\n\nexport default About;","\nimport React from 'react';\nimport {\n  useLocation,\n} from \"react-router-dom\";\nimport Fullpage, { FullPageSections, FullpageSection, FullpageCount, FullpageNavigation } from '@ap.cx/react-fullpage';\nimport logo from './logo.svg';\n\nfunction Documentation() {\n  let location = useLocation();\n  \n  return (\n    <Fullpage>\n      <FullpageNavigation/>\n      <FullPageSections>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Documentation\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>\n          </div>\n        </FullpageSection>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>\n          </div>\n        </FullpageSection>\n        <FullpageSection>\n          <div className=\"App\">\n            <header className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            </header>\n          </div>\n        </FullpageSection>\n      </FullPageSections>\n    </Fullpage>\n  );\n}\n\nexport default Documentation;","\nimport React from 'react';\nimport {\n  useLocation,\n} from \"react-router-dom\";\nimport Fullpage, { FullPageSections, FullpageSection, FullpageCount, FullpageNavigation } from '@ap.cx/react-fullpage';\nimport logo from './logo.svg';\n\nfunction ExampleHeaderFooterDrawer() {\n  let location = useLocation();\n  \n  return (\n    <div className=\"main-page\">\n    <Fullpage>\n      <FullpageNavigation/>\n      <FullPageSections>\n        <FullpageSection>\n          <div className=\"page1\">\n            \n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                About\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            \n          </div>\n        </FullpageSection>\n        <FullpageSection>\n          <div className=\"page2\">\n            \n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n            \n          </div>\n        </FullpageSection>\n        <FullpageSection>\n          <div className=\"page3\">\n            \n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>\n                Fullpage <FullpageSection.Number/>/<FullpageCount/>.\n              </p>\n              <a\n                className=\"App-link\"\n                href=\"https://reactjs.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Learn React\n              </a>\n          </div>\n        </FullpageSection>\n      </FullPageSections>\n    </Fullpage>\n    </div>\n  );\n}\n\nexport default ExampleHeaderFooterDrawer;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport './App.css';\nimport Navigation from './Components/Navigation';\nimport Home from './Home';\nimport About from './About';\nimport Documentation from './Documentation';\nimport ExampleHeaderFooterDrawer from './ExampleHeaderFooterDrawer'\n\nclass App extends Component {\n  render() {\n    return (\n      <React.StrictMode>\n        <Router>\n          <div>\n            <Navigation>\n              <ul>\n                <li>\n                  <Link to=\"/\" className=\"active\">React Fullpage</Link>\n                </li>\n                <li>\n                  <Link to=\"/about\">About</Link>\n                </li>\n                <li>\n                  <Link to=\"/documentation\">Documentation</Link>\n                </li>\n                <li>\n                  <Link to=\"/Example-header-footer-drawer\">Example (soon)</Link>\n                </li>\n              </ul>\n            </Navigation>\n            {/* A <Switch> looks through its children <Route>s and\n                renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/documentation\">\n                <Documentation />\n              </Route>\n              <Route path=\"/Example-header-footer-drawer\">\n                <ExampleHeaderFooterDrawer />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </React.StrictMode>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}